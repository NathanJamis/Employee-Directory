{"version":3,"sources":["components/Jumbotron/index.js","utils/API.js","components/Search/index.js","components/Table/index.js","components/Users/index.js","App.js","reportWebVitals.js","index.js"],"names":["Jumbotron","class","axios","get","Search","props","className","onSubmit","handleFormSubmit","value","onChange","handleInputChange","type","id","placeholder","Table","scope","onClick","sortFirstName","sortLastName","sortEmail","state","sortedUsers","map","user","name","first","last","email","login","uuid","Users","search","users","e","target","setState","sortUsers","toLowerCase","trim","preventDefault","input","filter","includes","sort","userA","userB","API","then","res","data","results","catch","err","console","log","this","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ad1fd67.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Jumbotron() {\r\n    return (\r\n        <div class=\"jumbotron jumbotron-fluid text-center bg-dark text-white\">\r\n            <div class=\"container\">\r\n                <h1 class=\"display-4\">Employee Directory</h1>\r\n                <p class=\"lead pb-3\">Sort employees alphabetically by clicking the first or last name column below, or find a specific employee by using the search bar.</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Jumbotron;","import axios from \"axios\";\r\n\r\nexport default {\r\n    getUsers: function() {\r\n        return axios.get(\"https://randomuser.me/api/?results=20\")\r\n    }\r\n};","import React from \"react\";\r\n\r\nfunction Search(props) {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"mx-3\">\r\n        <form className=\"form-inline\" onSubmit={props.handleFormSubmit}>\r\n          <input\r\n            value={props.value}\r\n            onChange={props.handleInputChange}\r\n            type=\"search\"\r\n            className=\"form-control\"\r\n            id=\"searchInput\"\r\n            placeholder=\"Find employee by name...\">\r\n          </input>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;","import React from \"react\";\r\n\r\nfunction Table(props) {\r\n    return (\r\n        <table class=\"table text-center\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\" onClick={props.sortFirstName}>First Name</th>\r\n                    <th scope=\"col\" onClick={props.sortLastName}>Last Name</th>\r\n                    <th scope=\"col\" onClick={props.sortEmail}>Email</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {props.state.sortedUsers.map((user) => {\r\n                    return (\r\n                        <tr key={user.login.uuid}>\r\n                            <td>{user.name.first}</td>\r\n                            <td>{user.name.last}</td>\r\n                            <td>{user.email}</td>\r\n                        </tr>\r\n                    )\r\n                }\r\n                )}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default Table;","import React, { Component } from \"react\";\r\nimport API from \"../../utils/API\";\r\nimport Search from \"../Search\";\r\nimport Table from \"../Table\";\r\n\r\nclass Users extends Component {\r\n    state = { \r\n        search: \"\",\r\n        users: [],\r\n        sortedUsers: [],        \r\n    };\r\n    componentDidMount() {\r\n        API.getUsers()\r\n        .then((res) => this.setState({\r\n            users: res.data.results,\r\n            sortedUsers: res.data.results,\r\n        }))\r\n        .catch(err => console.log(err));\r\n    };\r\n    handleInputChange = (e) => {\r\n        const value = e.target.value;\r\n        this.setState({ search: value });\r\n        this.sortUsers(value.toLowerCase().trim());\r\n    };\r\n    handleFormSubmit = e => {\r\n        e.preventDefault();\r\n    };\r\n    sortUsers = (input) => {\r\n        if (input) {\r\n            this.setState({\r\n                sortedUsers: this.state.users.filter((user) => {\r\n                    return (\r\n                        user.name.first.toLowerCase().includes(input) ||\r\n                        user.name.last.toLowerCase().includes(input)\r\n                    );\r\n                }),\r\n            });\r\n        } else {\r\n            this.setState({ sortedUsers: this.state.users })\r\n        }\r\n    };\r\n    sortFirstName = (e) => {\r\n        this.setState({\r\n            sortedUsers: this.state.sortedUsers.sort(\r\n                (userA, userB) => {\r\n                    if (userA.name.first < userB.name.first) {\r\n                        return -1\r\n                    } else if (userA.name.first > userB.name.first) {\r\n                        return 1\r\n                    } else {\r\n                        return 0\r\n                    }\r\n                }\r\n            )\r\n        })\r\n    };\r\n    sortLastName = (e) => {\r\n        this.setState({\r\n            sortedUsers: this.state.sortedUsers.sort(\r\n                (userA, userB) => {\r\n                    if (userA.name.last < userB.name.last) {\r\n                        return -1\r\n                    } else if (userA.name.last > userB.name.last) {\r\n                        return 1\r\n                    } else {\r\n                        return 0\r\n                    }\r\n                }\r\n            )\r\n        })\r\n    };\r\n    sortEmail = (e) => {\r\n        this.setState({\r\n            sortedUsers: this.state.sortedUsers.sort(\r\n                (userA, userB) => {\r\n                    if (userA.email < userB.email) {\r\n                        return -1\r\n                    } else if (userA.email > userB.email) {\r\n                        return 1\r\n                    } else {\r\n                        return 0\r\n                    }\r\n                }\r\n            )\r\n        })\r\n    };\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Search\r\n                    value={this.state.search}\r\n                    handleInputChange={this.handleInputChange}\r\n                    handleFormSubmit={this.handleFormSubmit}\r\n                />\r\n                <Table \r\n                    state={this.state}\r\n                    sortUsers={this.sortUsers}\r\n                    sortFirstName={this.sortFirstName}\r\n                    sortLastName={this.sortLastName}\r\n                    sortEmail={this.sortEmail}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Users;","import React from 'react';\nimport Jumbotron from \"./components/Jumbotron\";\nimport Users from \"./components/Users\";\n\nfunction App() {\n  return (\n    <div>\n      <Jumbotron />\n      <Users />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}